// "use client";
import React, { useEffect, useState } from "react";
import axios from "axios";
import { useRouter, useSearchParams } from "next/navigation";
import Swal from "sweetalert2";

// import "bootstrap/dist/css/bootstrap.min.css";

const CheckoutPage = () => {
    const [loading, setLoading] = useState(false);
    const [cartItems, setCartItems] = useState([]);
    const [totalPrice, setTotalPrice] = useState(0);
    const searchParams = useSearchParams();
    const router = useRouter();

    useEffect(() => {
        const storedData = localStorage.getItem("checkoutData");
        // if (storedData) {
        const items = JSON.parse(storedData);
        setCartItems(items);

        const total = items.reduce((sum, item) => sum + (item.courseDTO?.price || 0), 0);
        setTotalPrice(total);
        // } else {
        //     fetchCart();
        // }
    }, []);

    const fetchCart = async () => {
        try {
            const response = await axios.get(`http://localhost:8080/api/confirm-checkout`);
            const priceResponse = await axios.get(`http://localhost:8080/api/cartPrice`);

            setCartItems(Array.isArray(response.data) ? response.data : []);
            setTotalPrice(priceResponse.data || 0);
        } catch (error) {
            console.error("L·ªói khi l·∫•y gi·ªè h√†ng:", error);
            setCartItems([]);
            setTotalPrice(0);
        }
    };

    const handleConfirmPayment = async () => {
        try {
            setLoading(true);

            const storedData = localStorage.getItem("checkoutData");
            const items = JSON.parse(storedData);
            setCartItems(items);

            const selectedIds = items.map((item) => item.id);
            await axios.post("http://localhost:8080/api/place-order", selectedIds);
            window.dispatchEvent(new Event("cartUpdated"));

            await axios.get("http://localhost:8080/api/send-html-email");

            Swal.fire({
                title: "üéâ Thanh to√°n th√†nh c√¥ng!",
                text: "C·∫£m ∆°n b·∫°n ƒë√£ mua kho√° h·ªçc.",
                icon: "success",
                confirmButtonText: "V·ªÅ trang ch·ªß"
            }).then(() => {
                router.push("/"); // ƒëi·ªÅu h∆∞·ªõng sau khi ƒë√≥ng popup
            });

            // router.push("/");
        } catch (error) {
            console.error("L·ªói khi x·ª≠ l√Ω thanh to√°n:", error);
            Swal.fire({
                title: "L·ªói!",
                text: "ƒê√£ c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh thanh to√°n.",
                icon: "error",
                confirmButtonText: "Th·ª≠ l·∫°i"
            });
            // alert("ƒê√£ x·∫£y ra l·ªói khi thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i.");
        }
        finally {
            setLoading(false);
        }
    };


    return (
        <div className="container py-5 d-flex flex-column align-items-center justify-content-center" style={{ minHeight: '100vh' }}>
            {/* Overlay loading */}
            {loading && (
                <div className="position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center" style={{ background: 'rgba(0, 0, 0, 0.5)', zIndex: 1050 }}>
                    <div className="bg-white p-4 rounded shadow text-center">
                        <div className="spinner-border text-primary mb-3" role="status">
                            <span className="visually-hidden">Loading...</span>
                        </div>
                        <p className="fw-semibold">ƒêang x·ª≠ l√Ω ƒë∆°n h√†ng...</p>
                    </div>
                </div>
            )}

            <div className="text-center mb-4" style={{ paddingTop: '100px' }}>
                {/* <h2 className="fw-bold">Gi·ªè h√†ng</h2> */}
            </div>

            <div className="w-100" style={{ maxWidth: '1500px' }}>
                <table className="table-auto w-full text-center border border-gray-200 shadow-sm">
                    <thead className="bg-gray-800 text-white">
                        <tr>
                            <th scope="col">·∫¢nh</th>
                            <th scope="col">T√™n kho√° h·ªçc</th>
                            <th scope="col">Gi√°</th>
                        </tr>
                    </thead>
                    <tbody>
                        {cartItems.map((item) => (
                            <tr key={item.id}>
                                <td className="px-4 py-2">
                                    <img
                                        src={`http://localhost:8080/images/product/${item.courseDTO.image}`}
                                        alt=""
                                        style={{ width: 80, height: 80, objectFit: "cover", borderRadius: 8 }}
                                        className="w-20 h-20 object-cover rounded"

                                    />
                                </td>
                                <td className="px-4 py-2 fw-semibold">{item.courseDTO.title}</td>
                                <td className="px-4 py-2 text-red-600 fw-bold">
                                    {item.courseDTO?.price.toLocaleString()} ƒë
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>

                <div className="text-end mt-3">
                    <h4 className="text-success">T·ªïng ti·ªÅn: {totalPrice.toLocaleString()} ƒë</h4>
                </div>

                <div className="text-center mt-5">
                    <h3>X√°c nh·∫≠n thanh to√°n</h3>
                    <p className="text-muted">Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin tr∆∞·ªõc khi thanh to√°n.</p>
                </div>

                <div className="d-flex justify-content-center gap-3 mt-3">
                    <button
                        className="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-6 rounded-lg shadow"
                        onClick={handleConfirmPayment}
                        disabled={loading}
                    >
                        {loading ? " ƒêang x·ª≠ l√Ω..." : " X√°c nh·∫≠n thanh to√°n"}
                    </button>

                    <button className="border border-gray-400 hover:bg-gray-100 text-gray-700 font-medium py-2 px-6 rounded-lg" onClick={() => router.back()}>
                        Quay l·∫°i gi·ªè h√†ng
                    </button>
                </div>
            </div>
        </div>
    );
};


export default CheckoutPage;
